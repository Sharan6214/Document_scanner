import 'package:flutter/material.dart';
import 'package:lottie/lottie.dart';

class LottieViewScreen extends StatefulWidget {
  final VoidCallback onAnimationComplete;

  LottieViewScreen({required this.onAnimationComplete});

  @override
  _LottieViewScreenState createState() => _LottieViewScreenState();
}

class _LottieViewScreenState extends State<LottieViewScreen> with SingleTickerProviderStateMixin {
  late AnimationController _controller;

  @override
  void initState() {
    super.initState();
    _controller = AnimationController(vsync: this);
    _controller.addStatusListener((status) {
      if (status == AnimationStatus.completed) {
        widget.onAnimationComplete();
      }
    });
  }

  @override
  void dispose() {
    _controller.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Lottie Animation Screen'),
      ),
      body: Center(
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: <Widget>[
            // Display Lottie Animation and trigger completion when done
            Lottie.asset(
              'assets/images/animation.json',
              controller: _controller,
              onLoaded: (composition) {
                _controller
                  ..duration = composition.duration
                  ..forward();
              },
            ),
            SizedBox(height: 20),

          ],
        ),
      ),
    );
  }
}
